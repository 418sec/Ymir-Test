mod src.player;

import src.lib.sdl;
import src.resource;
import src.drawable;

struct
| name : string
| drawable : Drawable // Waiting for the inheritance feature...
 -> Player;

imut gShiftSize = 5;

def createPlayer (name : string, const posX : int, const posY : int, resType : ResourceType) -> Player
{
    let resManager = getResourcesManager ();
    let res = resManager.getResource (resType);
    let d = Drawable { Position { posX, posY }, res };
    return Player { name, d };
}

def getResource (ref player : Player) -> mut p!Resource
{
    return &(player.drawable.res);
}

def setResource (ref player : Player, resType : ResourceType)
{
    let resManager = getResourcesManager ();
    player.drawable.res = resManager.getResource (resType);
}

def goUp (ref player : Player)
{
    player.drawable.pos.y -= gShiftSize;
}

def goDown (ref player : Player)
{
    player.drawable.pos.y += gShiftSize; 
}

def goRight (ref player : Player)
{
    player.drawable.pos.x += gShiftSize;
}

def goLeft (ref player : Player)
{
    player.drawable.pos.x -= gShiftSize;
}

def goTo (ref player : Player, posX : int, posY : int)
{
    player.drawable.pos.x = posX;
    player.drawable.pos.y = posY;
}
