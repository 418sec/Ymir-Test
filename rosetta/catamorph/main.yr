import std::algorithm::_;
import std::io;

def reduce (FN : fn (X, X)-> X, X) (a : [X]) -> X {
    let mut fst = a [0];
    for i in 1_u64 .. a.len
        fst = FN (fst, a [i]);
    fst
}

def add (T) (a : T, b : T)-> T a + b
def mul (T) (a : T, b : T)-> T a * b

def main ()  {
    let list = generate!(|i, _| => i + 1_u64) (10_u64);

    println ("add : ", list.reduce!|x, y| x + y);
    println ("add : ", list.reduce!|x, y| x * y);    
}

