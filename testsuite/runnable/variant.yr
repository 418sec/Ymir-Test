import core.string;
import core.io;

struct
| elem : p!void
| id : const [char]
 -> Variant;

def variant (T) (a : T) -> mut Variant {
    import std.memory;
    return Variant {cast!(p!void) (alloc (a)), T::typeid};
}

def get (T) (a : Variant) -> mut T {
    if (T::typeid == a.id)
        return *(cast!(p!T) (a.elem));
    else
        assert (false);
}

def main () {
    let a = variant (10);
    let b = a.get!int;
    println (b);
}

