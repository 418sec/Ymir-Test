struct
| a : int
| b : int
 -> A;

static y : [A ; 2U];

self () {
    y = [A {1, 2}, A{3, 4}];
}

def g (a : p!int) -> mut p!int
    return a;

def f1 () -> mut p!int {
    let x = [A{1, 2}, A{3, 4}];
    return g (&x[1].a);
}

def f2 (n : int) -> mut p!int {
    let x = [A{1, 2}, A{3, 4}];
    return match n {
        0 =>  null;
        _ => g(&x [1].a);
    };
}

def h () 
    return g (&y[1].a);


def j (n : int) -> mut p!int {
    let x = [A{1,2}, A{3, 4}];
    let px = g (&y[1].a);
    if n == 1
        px = g (&x[1].a);
    if n == 2
        px = g (&x[0].b);
    return px;
}

def s () -> mut p!int {
    let i = int::init;
    return &i;
}

