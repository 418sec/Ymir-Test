import core.io;
import socket;

def main()
{
    // let sock = CreateSocket (AddrFamily::AfInet, SocketType::SockDGram, IpProtocol::Udp);
    let sock = UdpSocket ();
    
    if (sock.handle < 0)
    {
        println ("CreateSocket() error");
    }
    else
    {
        println ("binding...");
        if (!sock.bind (8888US))
        {
            println ("Bind() error");
        }
        else
        {
            let clientAddr = SockAddrIn::init;

            println ("recveiving...");
            let buffer = [char ; 12U];
            if (sock.recvFrom (buffer, cast!(p!SockAddr) (&clientAddr), SockAddrIn::sizeof) < 0)
                println ("recvFrom error");
            println (buffer);
            
            let message = "hello client";
            if (!sock.sendTo (message, cast!(p!SockAddr) (&clientAddr), SockAddrIn::sizeof))
                println ("sendTo error");
        }
        sock.close();
    }
}
