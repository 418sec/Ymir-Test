mod socket;

public
{
    extern (C) socket (addrFamily : int, socketType : int, protocol : int) -> int;
    extern (C) close (fd : int) -> int;
    extern (C) htons (host : ushort) -> ushort;
    extern (C) connect (socket : int, serverAddr : p!SockAddr, len : uint) -> int;
    extern (C) inet_addr (const c : p!char) -> uint;
    extern (C) send (sock : int, buf : const p!void, len : const uint, flags : const int) -> int;
    extern (C) recv (s : int, buf : p!void, len : int, flags : uint) -> int;
    extern (C) listen (s : int, backlog : int) -> int;
    extern (C) bind (sockfd : int, my_addr : p!SockAddr, addrlen : uint) -> int;
    extern (C) accept (sock : int, addr : p!SockAddr, addlen : p!uint) -> int;
}

struct
| s_addr : uint
 -> InAddr;

struct
| sin_family : short
| sin_port : ushort
| sin_addr : InAddr
| sin_zero : [char ; 8u]
 -> SockAddrIn;

struct
| sa_family : ushort
| sa_data : [char ; 14u]
 -> SockAddr;

/* TODO : complete this enum by using socket.h */
enum
| AfInet : 2	/* Internet IP Protocol */
 -> AddrFamily;

/* TODO : complete this enum by using socket.h */
enum
| SockStream : 1 /* stream (connection) socket) */
 -> SocketType;

enum : uint
| InAddrAny : 0U /* linux/in.h */
 -> AddrType;
